;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon Sep 17 21:59:28 2018
;; Desktop file format version 208
;; Emacs version 25.2.2

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23455 63888 572686 677000) (desktop . "208") "ozsaygin@orion" nil nil ((((font-backend xft x) (font . "-DAMA-Ubuntu Mono-normal-normal-normal-*-17-*-*-*-m-0-iso10646-1") (font-parameter . "Ubuntu Mono 13") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "black") (background-color . "white") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (wait-for-wm . t) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (environment) (frameset--id . "35AF-77E3-3296-DACC") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (visibility . t) (display . ":1") (explicit-name) (height . 50) (width . 196) (left . 26) (top . 32)) ((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 14) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 72) (min-pixel-width . 180) (min-pixel-height-ignore . 36) (min-pixel-width-ignore . 126) (min-pixel-height-safe . 18) (min-pixel-width-safe . 36)) hc (pixel-width . 1796) (pixel-height . 882) (total-width . 200) (total-height . 49) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 896) (pixel-height . 882) (total-width . 100) (total-height . 49) (normal-height . 1.0) (normal-width . 0.5) (buffer "main.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 637) (start . 1))) (leaf (last . t) (pixel-width . 900) (pixel-height . 882) (total-width . 100) (total-height . 49) (normal-height . 1.0) (normal-width . 0.5) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 3320) (start . 3279)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/emacs_cpp_completion/" "~/.emacs.d/" "~/struct.c" "~/.emacs.d/init.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/ozsaygin/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(visual-line-mode override-global-mode linum-mode company-mode)
  3320
  '(629 nil)
  nil
  nil
  '((buffer-file-coding-system . prefer-utf-8-unix) (truncate-lines))
  '((mark-ring (629 3279 3181 1727 1704 1703 1084 1083 1084 979 1084 979 979 979 3279 3279))))

(desktop-create-buffer 208
  "/home/ozsaygin/emacs_cpp_completion/main.cpp"
  "main.cpp"
  'c++-mode
  '(abbrev-mode visual-line-mode override-global-mode auto-revert-mode magit-file-mode company-mode irony-mode gtags-mode)
  637
  '(233 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines))
  '((mark-ring (202 233 233 233 202 233 233 202 233 233 202 233 211 1804 408 637))))

(desktop-create-buffer 208
  nil
  "emacs_cpp_completion"
  'dired-mode
  '(visual-line-mode override-global-mode company-mode)
  403
  '(nil nil)
  t
  '("/home/ozsaygin/emacs_cpp_completion/")
  '((truncate-lines))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/home/ozsaygin/struct.c"
  "struct.c"
  'c-mode
  '(overwrite-mode abbrev-mode visual-line-mode override-global-mode company-mode irony-mode)
  3
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode . overwrite-mode-textual) (truncate-lines))
  '((mark-ring nil)))

